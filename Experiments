def run_experiments():
    m = 100
    n = 20
    k = 2000
    G = std_matrix(np.random.randn(m, n))

    x_star = np.random.uniform(-10, 10, (n, 1))

    types = ["hadamart_product", "hadamart_with_pairwise", "hadamart_gaussian_promax"]
    labels = {
        "hadamart_product": "-b * Ax <= 0",
        "hadamart_with_pairwise": "-b * Ax <= 0 ∪ Pairwise",
        "hadamart_gaussian_promax": "-b * Ax <= 0 ∪ G'"
    }

    lambda_values = [0.01, 0.1, 1, 1.5]
    beta_values = [1, 5]

    with PdfPages('output_plots.pdf') as pdf:
        for lmbd in lambda_values:
            for beta in beta_values:

                histories = {
                    "accuracy": {},
                    "error": {}
                }
                print(f"\nRunning experiments for lambda (alpha) = {lmbd} and beta = {beta}")
                for type_ in types:
                    print(f"  Running SKM for type: {labels[type_]}")
                    accuracy_experiments = []
                    error_experiments = []

                    for _ in range(10):
                        xk_history, accuracy_history, error_history = sampling_kaczmarz_motzkins(
                            A=G,
                            x_star=x_star,
                            beta=beta,
                            lambd=lmbd,
                            k=k,
                            type_=type_
                        )
                        accuracy_experiments.append(accuracy_history)
                        error_experiments.append(error_history)

                    avg_accuracy = np.mean(accuracy_experiments, axis=0)
                    avg_error = np.mean(error_experiments, axis=0)
                    histories["accuracy"][labels[type_]] = avg_accuracy
                    histories["error"][labels[type_]] = avg_error

                plt.figure(figsize=(14, 6))

                plt.subplot(1, 2, 1)
                for label in labels.values():
                    plt.plot(range(1, k + 1), histories["accuracy"][label], label=label)
                plt.xlabel('Iterations')
                plt.ylabel('Accuracy')
                plt.title(f'Accuracy (lambda={lmbd}, beta={beta})')
                plt.legend()
                plt.grid(True)

                plt.subplot(1, 2, 2)
                for label in labels.values():
                    plt.plot(range(1, k + 1), histories["error"][label], label=label)
                plt.xlabel('Iterations')
                plt.ylabel('Approximation Error ||xk - x*||²')
                plt.title(f'Error (lambda={lmbd}, beta={beta})')
                plt.legend()
                plt.grid(True)

                plt.tight_layout()
                pdf.savefig()
                plt.close()

                print(f"\nFinal Results after {k} iterations for lambda={lmbd} and beta={beta}:")
                for label in labels.values():
                    final_accuracy = histories["accuracy"][label][-1]
                    final_error = histories["error"][label][-1]
                    print(f"  Type {label}:")
                    print(f"    Accuracy: {final_accuracy * 100:.2f}%")
                    print(f"    Approximation Error: {final_error:.4f}\n")

    print("\nAll plots have been saved to 'output_plots.pdf'.")
